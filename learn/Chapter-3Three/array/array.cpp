//
// Created by Jianyou on 2024/11/9.
//
#include<iostream>
#include<string>
#include<cctype>
#include<vector>
using namespace std;
int main()
{
    //定义一个数组：类型名 数组名[元素的数量]  元素的个数==数组的维度
    //***数组的维度必须为常量表达式；
    //必须指定数组的类型名，不能用auto推断, 数组元素为对象，数组元素不能含有对象
    int i[10];                       //含有10个整数的数组

    //显式初始化数组
    int i1[] = {1,2,3};                          //定义的时候不给维度，数组自己会根据初始值的数量判断；
    int i2[3] = {4,5,6};                         //给定维度后，初始量的数量不能超过维度值；

    //字符数组的特性
    //除了列表初始化，字符数组还有一种初始化方式，用字符串字面值初始化--就是直接= "hello world";
    //字面值字符串实际上是 由字符构成的数组，并且在最后自动加入一个空字符'/0',所以直接用字符串字面值初始化字符数组时要维度要多加1；
    char c1[12] = "hello world";                    //  /0
    for (int x = 0; x < 12; ++x)
    {
        cout << c1[x];
    }
    cout  << endl;

    //数组的指针和数组的引用
    //使用由内向外的阅读方法 like->p2是个指针，他指向一个数组，数组名是arr,引用类似；
    int (*p1)[10];                                           //p1是含有10个指针的数组；
    int arr[10];
    int (*p2)[10] = &arr;                                    //p2指向一个含有10个整数的数组；
    //int (*p3) =&arr;
    int (&r3)[10] = arr;                                     //p2引用一个含有10个整数的数组；
    return 0;
}