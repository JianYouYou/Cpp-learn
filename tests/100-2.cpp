//辨别指针的操作
// Created by Jianyou on 24-10-18.
#include <iostream>
int main()
{
    using namespace std;
    int a = 7;
    int *p = &a;                //定义指针p，令指针指向变量a，&（取地址符）；
    cout << *p << endl;
    *p = 8;                     //给p赋值=给p指向的变量赋值，使a=8,*为 解引用符，访问指针指向的变量(对象)；
    cout << *p << endl;
    int b = 9;
    p = &b;                     //改变指针的地址值，现在p指向改为b，即改变指针的值；
    cout << *p << endl;
    *p = b;                     //使a=b;
    cout << *p << endl;
    *p = 0;                 //现在p不指向任何变量；
    {
        {
            {
                int n = 1;
            }
            cout << n << endl;

        }
    }
    return 0;

}
/* 输出指针时要加上取地址符（*）
 * 定义指针要输出，不然报错
 * (*)其一用来定义指针，定义指针一定要初始化，避免出bug；
 *   其二解引用符，使可访问指针所指的对象，*p整体的意思是指针p指向的那个对象;引用里叫解引用，指针里叫解指针
 * (&)其一，在数据类型侧，用来定义引用；
 *   其二，在变量（对象/声明符）侧，为取地址符，初始化指针，
 *///const